# build stage
FROM node:lts-alpine as build-stage

# Set up the working directory
WORKDIR /app

# Copy package files first
COPY frontend/package*.json ./
COPY frontend/quasar.config.js ./
COPY frontend/.quasar ./quasar
COPY frontend/src ./src
COPY frontend/public ./public
COPY frontend/index.html ./
COPY frontend/postcss.config.js ./
COPY frontend/.editorconfig ./
COPY frontend/.npmrc ./
COPY frontend/jsconfig.json ./
COPY frontend/eslint.config.js ./
COPY frontend/.prettierrc.json ./

# Install dependencies and build the application
RUN npm install && \
    npm install -g @quasar/cli && \
    quasar build

# production stage
FROM nginx:stable-alpine as production-stage

# Create the node user and group
RUN addgroup -g 1000 node && \
    adduser -u 1000 -G node -s /bin/sh -D node && \
    mkdir -p /var/cache/nginx /var/log/nginx /var/run

# Copy built files and nginx configuration
COPY --from=build-stage /app/dist/spa /usr/share/nginx/html
COPY nginx/frontend.conf /etc/nginx/conf.d/default.conf

# Set permissions for necessary directories
RUN chown -R node:node /usr/share/nginx/html && \
    chown -R node:node /var/cache/nginx && \
    chown -R node:node /var/log/nginx && \
    chown -R node:node /etc/nginx/conf.d && \
    touch /var/run/nginx.pid && \
    chown -R node:node /var/run/nginx.pid

# Configure nginx to use the node user
RUN sed -i 's/user  nginx;/user  node;/' /etc/nginx/nginx.conf

# Expose port and start nginx
EXPOSE 80

# Switch to the node user
USER node

CMD ["nginx", "-g", "daemon off;"]